<?xml version="1.1" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd"
>

    <!--
        Setting the default version to 1 instead of 0 is correct. A version of 0 indicates to Spring Data JDBC
        that an entity is new and has not yet been inserted into the database. The app would then try to use
        an insert instead of an update on the next modification of the entity, causing an error
        because of a duplicate primary key.
     -->
    <changeSet id="1" author="Farbfetzen">
        <sql>
            CREATE TABLE users (
                id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
                version int NOT NULL DEFAULT 1,
                email varchar UNIQUE NOT NULL,
                name varchar NOT NULL,
                created_at timestamptz NOT NULL DEFAULT now()
            )
        </sql>
    </changeSet>

    <changeSet id="2" author="Farbfetzen">
        <sql>INSERT INTO users (email, name) VALUES ('theo@example.org', 'Theo Test')</sql>
    </changeSet>

    <changeSet id="3" author="Farbfetzen">
        <sql>ALTER TABLE users ADD updated_at timestamptz</sql>
        <sql endDelimiter="/">
            CREATE FUNCTION set_updated_at() RETURNS trigger LANGUAGE plpgsql AS $$
            BEGIN
                NEW.updated_at := now();
                RETURN NEW;
            END;
            $$
        </sql>
        <sql>
            CREATE TRIGGER set_updated_at_trigger BEFORE UPDATE
            ON users
            FOR EACH ROW
            EXECUTE function set_updated_at()
        </sql>
    </changeSet>
</databaseChangeLog>
